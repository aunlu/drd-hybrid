<!--
  ~ DRD - Dynamic Data Race Detector for Java programs
  ~
  ~ Copyright (C) 2002-2018 Devexperts LLC
  ~
  ~ This program is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU General Public License as published by
  ~ the Free Software Foundation, either version 3 of the License, or
  ~ (at your option) any later version.
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ GNU General Public License for more details.
  ~
  ~ You should have received a copy of the GNU General Public License
  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.
  -->

<HappensBeforeConfig xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                     xsi:noNamespaceSchemaLocation="hb-config-scheme.xsd">
    <Syncs>
        <Sync>
            <Links>
                <Link send="owner" receive="owner"/>
                <Link send="param" send-number="0" receive="param" receive-number="0"/>
            </Links>
            <Send>
                <MethodCall owner="java.util.concurrent.ConcurrentMap" name="put"
                    descriptor="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"/>
            </Send>
            <Receive>
                <MethodCall owner="java.util.concurrent.ConcurrentMap" name="get"
                    descriptor="(Ljava/lang/Object;)Ljava/lang/Object;"/>
            </Receive>
        </Sync>

        <Sync>
            <Links>
                <Link send="owner" receive="owner"/>
            </Links>
            <Send>
                <MethodCall owner="java.util.concurrent.locks.Lock" name="unlock"
                    descriptor="()V"/>
            </Send>
            <Receive>
                <MethodCall owner="java.util.concurrent.locks.Lock" name="lock"
                    descriptor="()V"/>
            </Receive>
        </Sync>

        <Sync>
            <Links>
                <Link send="param" send-number="0" receive="owner"/>
            </Links>
            <Send>
                <MethodCall owner="java.util.concurrent.Executor" name="execute"
                    descriptor="(Ljava/lang/Runnable;)V"/>
            </Send>
            <Receive>
                <MethodCall owner="java.lang.Runnable" name="run"
                    descriptor="()V"/>
            </Receive>
        </Sync>
    </Syncs>

    <Multiple-Syncs>
        <Multiple-Sync owner="sun.misc.Unsafe">
            <Multiple-Links>
                <Multiple-Link type="param" args="0"/>
                <Multiple-Link type="param" args="1"/>
            </Multiple-Links>
            <Call type="full" name="compareAndSwapObject" shouldReturnTrue="true"
                descriptor="(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z"/>
            <Call type="full" name="compareAndSwapLong" shouldReturnTrue="true"
                descriptor="(Ljava/lang/Object;JJJ)Z"/>
            <Call type="full" name="compareAndSwapInt" shouldReturnTrue="true"
                descriptor="(Ljava/lang/Object;JII)Z"/>
            <Call type="receive" name="getObjectVolatile" descriptor="(Ljava/lang/Object;J)Ljava/lang/Object;"/>
            <Call type="send" name="putObjectVolatile" descriptor="(Ljava/lang/Object;JLjava/lang/Object;)V"/>
            <Call type="receive" name="getIntVolatile" descriptor="(Ljava/lang/Object;J)I"/>
            <Call type="send" name="putIntVolatile" descriptor="(Ljava/lang/Object;JI)V"/>
            <Call type="receive" name="getBooleanVolatile" descriptor="(Ljava/lang/Object;J)Z"/>
            <Call type="send" name="putBooleanVolatile" descriptor="(Ljava/lang/Object;JZ)V"/>
            <Call type="receive" name="getByteVolatile" descriptor="(Ljava/lang/Object;J)B"/>
            <Call type="send" name="putByteVolatile" descriptor="(Ljava/lang/Object;JB)V"/>
            <Call type="receive" name="getShortVolatile" descriptor="(Ljava/lang/Object;J)S"/>
            <Call type="send" name="putShortVolatile" descriptor="(Ljava/lang/Object;JS)V"/>
            <Call type="receive" name="getCharVolatile" descriptor="(Ljava/lang/Object;J)C"/>
            <Call type="send" name="putCharVolatile" descriptor="(Ljava/lang/Object;JC)V"/>
            <Call type="receive" name="getLongVolatile" descriptor="(Ljava/lang/Object;J)J"/>
            <Call type="send" name="putLongVolatile" descriptor="(Ljava/lang/Object;JJ)V"/>
            <Call type="receive" name="getFloatVolatile" descriptor="(Ljava/lang/Object;J)F"/>
            <Call type="send" name="putFloatVolatile" descriptor="(Ljava/lang/Object;JF)V"/>
            <Call type="receive" name="getDoubleVolatile" descriptor="(Ljava/lang/Object;J)D"/>
            <Call type="send" name="putDoubleVolatile" descriptor="(Ljava/lang/Object;JD)V"/>
        </Multiple-Sync>

        <Multiple-Sync owner="java.util.concurrent.locks.AbstractQueuedSynchronizer">
            <Multiple-Links>
                <Multiple-Link type="owner"/>
            </Multiple-Links>
            <Call type="receive" name="tryAcquire" descriptor="(I)Z" shouldReturnTrue="true"/>
            <Call type="send" name="tryRelease" descriptor="(I)Z"/>
            <Call type="receive" name="tryAcquireShared" descriptor="(I)Z" shouldReturnTrue="true"/>
            <Call type="send" name="tryReleaseShared" descriptor="(I)Z"/>
            <Call type="receive" name="acquire" descriptor="(I)V"/>
            <Call type="receive" name="acquireInterruptibly" descriptor="(I)V"/>
            <Call type="receive" name="tryAcquireNanos" descriptor="(IJ)Z" shouldReturnTrue="true"/>
            <Call type="send" name="release" descriptor="(I)Z"/>
            <Call type="receive" name="acquireShared" descriptor="(I)V"/>
            <Call type="receive" name="acquireSharedInterruptibly" descriptor="(I)V"/>
            <Call type="receive" name="tryAcquireSharedNanos" descriptor="(IJ)Z" shouldReturnTrue="true"/>
            <Call type="send" name="releaseShared" descriptor="(I)Z"/>
            <Call type="send" name="setState" descriptor="(I)V"/>
            <Call type="receive" name="getState" descriptor="()I"/>
            <Call type="full" name="compareAndSetState" descriptor="(II)Z" shouldReturnTrue="true"/>
        </Multiple-Sync>

        <Multiple-Sync owner="java.util.concurrent.atomic.AtomicInteger">
            <Multiple-Links>
                <Multiple-Link type="owner"/>
            </Multiple-Links>
            <Call type="receive" name="get" descriptor="()I"/>
            <Call type="send" name="set" descriptor="(I)V"/>
            <Call type="full" name="getAndSet" descriptor="(I)I"/>
            <Call type="full" name="compareAndSet" descriptor="(II)Z" shouldReturnTrue="true"/>
            <Call type="full" name="getAndIncrement" descriptor="()I"/>
            <Call type="full" name="getAndDecrement" descriptor="()I"/>
            <Call type="full" name="getAndAdd" descriptor="(I)I"/>
            <Call type="full" name="incrementAndGet" descriptor="()I"/>
            <Call type="full" name="decrementAndGet" descriptor="()I"/>
            <Call type="full" name="addAndGet" descriptor="(I)I"/>
        </Multiple-Sync>

        <Multiple-Sync owner="java.util.concurrent.atomic.AtomicLong">
            <Multiple-Links>
                <Multiple-Link type="owner"/>
            </Multiple-Links>
            <Call type="receive" name="get" descriptor="()J"/>
            <Call type="send" name="set" descriptor="(J)V"/>
            <Call type="full" name="getAndSet" descriptor="(J)J"/>
            <Call type="full" name="compareAndSet" descriptor="(JJ)Z" shouldReturnTrue="true"/>
            <Call type="full" name="getAndIncrement" descriptor="()J"/>
            <Call type="full" name="getAndDecrement" descriptor="()J"/>
            <Call type="full" name="getAndAdd" descriptor="(J)J"/>
            <Call type="full" name="incrementAndGet" descriptor="()J"/>
            <Call type="full" name="decrementAndGet" descriptor="()J"/>
            <Call type="full" name="addAndGet" descriptor="(J)J"/>
        </Multiple-Sync>

        <Multiple-Sync owner="java.util.concurrent.atomic.AtomicBoolean">
            <Multiple-Links>
                <Multiple-Link type="owner"/>
            </Multiple-Links>
            <Call type="receive" name="get" descriptor="()Z"/>
            <Call type="full" name="compareAndSet" descriptor="(ZZ)Z" shouldReturnTrue="true"/>
            <Call type="send" name="set" descriptor="(Z)V"/>
            <Call type="full" name="getAndSet" descriptor="(Z)Z"/>
        </Multiple-Sync>

        <Multiple-Sync owner="java.util.concurrent.atomic.AtomicReferenceFieldUpdater">
            <Multiple-Links>
                <Multiple-Link type="param" args="0"/>
            </Multiple-Links>
            <Call type="full" name="compareAndSet"
                descriptor="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z" shouldReturnTrue="true"/>
            <Call type="send" name="set" descriptor="(Ljava/lang/Object;Ljava/lang/Object;)V"/>
            <Call type="receive" name="get" descriptor="(Ljava/lang/Object;)Ljava/lang/Object;"/>
            <Call type="full" name="getAndSet" descriptor="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"/>
        </Multiple-Sync>

        <Multiple-Sync owner="java.util.concurrent.atomic.AtomicIntegerFieldUpdater">
            <Multiple-Links>
                <Multiple-Link type="param" args="0"/>
            </Multiple-Links>
            <Call type="full" name="compareAndSet" descriptor="(Ljava/lang/Object;II)Z" shouldReturnTrue="true"/>
            <Call type="send" name="set" descriptor="(Ljava/lang/Object;I)V"/>
            <Call type="receive" name="get" descriptor="(Ljava/lang/Object;)I"/>
            <Call type="full" name="getAndSet" descriptor="(Ljava/lang/Object;I)I"/>
            <Call type="full" name="getAndIncrement" descriptor="(Ljava/lang/Object;)I"/>
            <Call type="full" name="getAndDecrement" descriptor="(Ljava/lang/Object;)I"/>
            <Call type="full" name="getAndAdd" descriptor="(Ljava/lang/Object;I)I"/>
            <Call type="full" name="incrementAndGet" descriptor="(Ljava/lang/Object;)I"/>
            <Call type="full" name="decrementAndGet" descriptor="(Ljava/lang/Object;)I"/>
            <Call type="full" name="addAndGet" descriptor="(Ljava/lang/Object;I)I"/>
        </Multiple-Sync>

        <Multiple-Sync owner="java.util.concurrent.atomic.AtomicLongFieldUpdater">
            <Multiple-Links>
                <Multiple-Link type="param" args="0"/>
            </Multiple-Links>
            <Call type="full" name="compareAndSet" descriptor="(Ljava/lang/Object;JJ)Z" shouldReturnTrue="true"/>
            <Call type="send" name="set" descriptor="(Ljava/lang/Object;J)V"/>
            <Call type="receive" name="get" descriptor="(Ljava/lang/Object;)J"/>
            <Call type="full" name="getAndSet" descriptor="(Ljava/lang/Object;J)J"/>
            <Call type="full" name="getAndIncrement" descriptor="(Ljava/lang/Object;)J"/>
            <Call type="full" name="getAndDecrement" descriptor="(Ljava/lang/Object;)J"/>
            <Call type="full" name="getAndAdd" descriptor="(Ljava/lang/Object;J)J"/>
            <Call type="full" name="incrementAndGet" descriptor="(Ljava/lang/Object;)J"/>
            <Call type="full" name="decrementAndGet" descriptor="(Ljava/lang/Object;)J"/>
            <Call type="full" name="addAndGet" descriptor="(Ljava/lang/Object;J)J"/>
        </Multiple-Sync>

        <Multiple-Sync owner="java.util.concurrent.atomic.AtomicIntegerArray">
            <Multiple-Links>
                <Multiple-Link type="owner"/>
                <Multiple-Link type="param" args="0"/>
            </Multiple-Links>
            <Call type="receive" name="get" descriptor="(I)I"/>
            <Call type="send" name="set" descriptor="(II)V"/>
            <Call type="full" name="getAndSet" descriptor="(II)I"/>
            <Call type="full" name="compareAndSet" descriptor="(III)Z" shouldReturnTrue="true"/>
            <Call type="full" name="getAndIncrement" descriptor="(I)I"/>
            <Call type="full" name="getAndDecrement" descriptor="(I)I"/>
            <Call type="full" name="getAndAdd" descriptor="(II)I"/>
            <Call type="full" name="incrementAndGet" descriptor="(I)I"/>
            <Call type="full" name="decrementAndGet" descriptor="(I)I"/>
            <Call type="full" name="addAndGet" descriptor="(II)I"/>
        </Multiple-Sync>

        <Multiple-Sync owner="java.util.concurrent.atomic.AtomicLongArray">
            <Multiple-Links>
                <Multiple-Link type="owner"/>
                <Multiple-Link type="param" args="0"/>
            </Multiple-Links>
            <Call type="receive" name="get" descriptor="(I)J"/>
            <Call type="send" name="set" descriptor="(IJ)V"/>
            <Call type="full" name="getAndSet" descriptor="(IJ)J"/>
            <Call type="full" name="compareAndSet" descriptor="(IJJ)Z" shouldReturnTrue="true"/>
            <Call type="full" name="getAndIncrement" descriptor="(I)J"/>
            <Call type="full" name="getAndDecrement" descriptor="(I)J"/>
            <Call type="full" name="getAndAdd" descriptor="(IJ)J"/>
            <Call type="full" name="incrementAndGet" descriptor="(I)J"/>
            <Call type="full" name="decrementAndGet" descriptor="(I)J"/>
            <Call type="full" name="addAndGet" descriptor="(IJ)J"/>
        </Multiple-Sync>

        <Multiple-Sync owner="java.util.concurrent.atomic.AtomicReferenceArray">
            <Multiple-Links>
                <Multiple-Link type="owner"/>
                <Multiple-Link type="param" args="0"/>
            </Multiple-Links>
            <Call type="receive" name="get" descriptor="(I)Ljava/lang/Object;"/>
            <Call type="send" name="set" descriptor="(ILjava/lang/Object;)V"/>
            <Call type="full" name="getAndSet" descriptor="(ILjava/lang/Object;)Ljava/lang/Object;"/>
            <Call type="full" name="compareAndSet" descriptor="(ILjava/lang/Object;Ljava/lang/Object;)Z"
                shouldReturnTrue="true"/>
        </Multiple-Sync>

        <Multiple-Sync owner="java.util.concurrent.BlockingQueue">
            <Multiple-Links>
                <Multiple-Link type="owner"/>
            </Multiple-Links>
            <Call type="send" name="add" descriptor="(Ljava/lang/Object;)Z"/>
            <Call type="send" name="offer" descriptor="(Ljava/lang/Object;)Z" shouldReturnTrue="true"/>
            <Call type="send" name="put" descriptor="(Ljava/lang/Object;)Z" shouldReturnTrue="true"/>
            <Call type="receive" name="take" descriptor="()Ljava/lang/Object;"/>
            <Call type="receive" name="poll" descriptor="()Ljava/lang/Object;"/>
        </Multiple-Sync>

        <Multiple-Sync owner="java.util.concurrent.CopyOnWriteArrayList">
            <Multiple-Links>
                <Multiple-Link type="owner"/>
            </Multiple-Links>
            <Call type="send" name="add" descriptor="(Ljava/lang/Object;)Z"/>
            <Call type="send" name="add" descriptor="(ILjava/lang/Object;)V"/>
            <Call type="receive" name="get" descriptor="(I)Ljava/lang/Object;"/>
            <Call type="receive" name="remove" descriptor="(I)Ljava/lang/Object;"/>
            <Call type="receive" name="remove" descriptor="(Ljava/lang/Object;)Z"/>
        </Multiple-Sync>
    </Multiple-Syncs>
</HappensBeforeConfig>

